╔══════════════════════════════════════════════════════════════════════════╗
║                  ZAPPER ARGOCD GITOPS REPOSITORY                         ║
║                       Estrutura Completa                                  ║
╚══════════════════════════════════════════════════════════════════════════╝

📦 zapper-argocd/
│
├── 📂 apps/                        ← ArgoCD Applications (4 arquivos)
│   ├── clickhouse.yaml             → Operator + Cluster ClickHouse
│   ├── cloudnative-pg.yaml         → Operator + Cluster PostgreSQL
│   ├── peerdb-dependencies.yaml    → PostgreSQL + Temporal (Helm)
│   └── peerdb.yaml                 → PeerDB deployment
│
├── 📂 helm-values/                 ← Configurações customizadas (7 arquivos)
│   ├── clickhouse-cluster.yaml     → ClickHouseInstallation CRD
│   ├── clickhouse-operator-values.yaml
│   ├── cloudnative-pg-values.yaml
│   ├── peerdb-values.yaml
│   ├── postgres-cluster.yaml       → PostgreSQL Cluster CRD
│   ├── postgresql-values.yaml
│   └── temporal-values.yaml
│
├── 📂 manifests/                   ← Kubernetes manifests (2 arquivos)
│   └── peerdb/
│       ├── deployment.yaml         → PeerDB server + flow-workers
│       └── service.yaml            → Service ClusterIP
│
├── 📂 bootstrap/                   ← Bootstrap ArgoCD
│   └── argocd-install.yaml
│
├── 📄 README.md                    ← Guia principal (COMECE AQUI)
├── 📄 QUICKREF.md                  ← Referência rápida
├── 📄 STRUCTURE.md                 ← Estrutura detalhada
├── 📄 ARCHITECTURE.md              ← Arquitetura do sistema
├── 📄 PEERDB_SETUP.md             ← Configuração CDC
├── 📄 CHECKLIST.md                ← Checklist de validação
│
├── 🛠️  Makefile                     ← Comandos úteis
├── 🚀 quickstart.sh                ← Script de instalação rápida
└── 📋 .gitignore

═══════════════════════════════════════════════════════════════════════════

🎯 HELM CHARTS OFICIAIS UTILIZADOS:

┌─────────────────────────┬────────────────────────────────────────────┐
│ Componente              │ Chart Helm Oficial                         │
├─────────────────────────┼────────────────────────────────────────────┤
│ ClickHouse Operator     │ altinity/clickhouse-operator@0.23.6        │
│ CloudNativePG Operator  │ cloudnative-pg/cloudnative-pg@0.21.6       │
│ PostgreSQL (metadata)   │ bitnami/postgresql@15.5.20                 │
│ Temporal               │ temporal/temporal@0.45.1                   │
│ PeerDB                 │ Manifests customizados (sem chart)         │
└─────────────────────────┴────────────────────────────────────────────┘

═══════════════════════════════════════════════════════════════════════════

📊 ARQUITETURA DEPLOYADA:

┌────────────────────────────────────────────────────────────────────────┐
│                          ArgoCD (GitOps)                               │
│                    Sincroniza do Git → Cluster                         │
└────────────────────────────────────────────────────────────────────────┘
                                  │
        ┌─────────────────────────┼─────────────────────────┐
        │                         │                         │
        ▼                         ▼                         ▼
┌──────────────┐      ┌──────────────────┐      ┌──────────────────┐
│  ClickHouse  │      │  CloudNativePG   │      │  PeerDB + Deps   │
│   Operator   │      │     Operator     │      │                  │
└──────────────┘      └──────────────────┘      └──────────────────┘
        │                      │                         │
        ▼                      ▼                         ▼
┌──────────────┐      ┌──────────────────┐      ┌──────────────────┐
│ CH Cluster   │◄─────│ PostgreSQL       │      │ PostgreSQL       │
│ 2 shards     │ CDC  │ 3 replicas       │      │ (metadata)       │
│ 2 replicas   │      │ Logical Rep      │      ├──────────────────┤
│              │      │ Dummy data       │      │ Temporal         │
├──────────────┤      └──────────────────┘      │ (workflows)      │
│ CH Keeper    │                                 ├──────────────────┤
│ 3 instances  │                                 │ PeerDB Server    │
└──────────────┘                                 │ + Flow Workers   │
                                                 └──────────────────┘

═══════════════════════════════════════════════════════════════════════════

🚀 QUICK START:

1. Instalar ArgoCD:
   $ kubectl create namespace argocd
   $ kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml

2. Configurar repositório:
   $ sed -i '' 's/YOUR_USERNAME/seu-usuario/g' apps/*.yaml

3. Push para Git:
   $ git init && git add . && git commit -m "Initial commit"
   $ git push

4. Deploy aplicações:
   $ kubectl apply -f apps/

5. Monitorar:
   $ kubectl get applications -n argocd -w

═══════════════════════════════════════════════════════════════════════════

📝 PRÓXIMOS PASSOS:

1. Leia README.md para setup completo
2. Configure PeerDB (veja PEERDB_SETUP.md)
3. Teste CDC (insira dados no PostgreSQL → verifique ClickHouse)
4. Use Makefile para comandos úteis (make help)

═══════════════════════════════════════════════════════════════════════════

✅ FEATURES:

[✓] GitOps completo via ArgoCD
[✓] Helm charts oficiais (melhor suporte)
[✓] Operators para automação
[✓] CDC PostgreSQL → ClickHouse
[✓] ClickHouse cluster com Keeper
[✓] Alta disponibilidade
[✓] Self-healing automático
[✓] Dummy data para testes
[✓] Documentação completa

═══════════════════════════════════════════════════════════════════════════
